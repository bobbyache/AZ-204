How does an app in the Free and Shared tiers run and receive CPU minutes?|In the Free and Shared tiers, an app receives CPU minutes on a shared VM instance.
What can't an app in the Free and Shared tiers do?|An app in the Free and Shared tiers can't scale out.
Where does an app run in the App Service plan?|An app runs on all the VM instances configured in the App Service plan.
What is the App Service plan responsible for?|The App Service plan is the scale unit of the App Service apps.
Do multiple deployment slots for an app run on the same VM instances?|Yes, if you have multiple deployment slots for an app, all deployment slots also run on the same VM instances.
What else uses CPU cycles and memory on the VM instances?|Enabling diagnostic logs, performing backups, and running WebJobs also use CPU cycles and memory on these VM instances.
How can you scale up or down your App Service plan?|You can scale up or down your App Service plan by changing the pricing tier of the plan.
What allows you to have greater control of your apps and allocate new resources?|Isolating your app into a new App Service plan allows you to have greater control of your apps and allocate a new set of resources for your app.
When should you consider isolating your app into a new App Service plan?|You should consider isolating your app into a new App Service plan when the app is resource-intensive.
Why might you want to isolate your app into a new App Service plan?|You might want to isolate your app into a new App Service plan to scale the app independently from the other apps in the existing plan.
How can you potentially save money when using App Service plans?|You can potentially save money by putting multiple apps into one App Service plan.
What should you consider when putting multiple apps into one App Service plan?|You should consider the capacity of the existing App Service plan and the expected load for the new app.
In what scenarios should you isolate your app into a new App Service plan?|You should isolate your app into a new App Service plan when the app needs resources in a different geographical region.
What can you achieve by isolating your app into a new App Service plan?|By isolating your app into a new App Service plan, you can gain greater control of your apps.
What does autoscaling enable a system to do?|Adjust the resources required to meet varying demand from users while controlling associated costs.
What can autoscaling be triggered by?|A schedule or assessing whether the system is running short on resources.
What is autoscaling?|A cloud system or process that adjusts available resources based on the current demand.
What does autoscaling in Azure App Service monitor?|The resource metrics of a web app as it runs.
How does autoscaling in Azure App Service respond to changes in the environment?|By adding or removing web servers and balancing the load between them.
What decisions does autoscaling make based on?|Rules that you define, which specify the threshold for a metric.
When should you consider autoscaling?|When you want to provide elasticity for your services or improve availability and fault tolerance.
In what situations might autoscaling not be an effective approach?|When web apps perform resource-intensive processing as part of each request.
How can you handle a surge in requests caused by a Denial of Service attack?|Implement detection and filtering of requests that occur during such an attack before they reach your service.
Is autoscaling the best approach to handling long-term growth?|No, manually scaling the system over time may be more cost effective if the rate of growth can be anticipated.
What is a factor to consider regarding the number of instances of a service?|The fewer the number of instances initially, the less capacity you have to handle an increasing workload while autoscaling spins up more instances.
How does autoscaling prevent runaway scaling?|Autoscaling prevents runaway scaling by having an instance limit defined in the App Service Plan, which restricts the creation of additional instances beyond the limit.
What are the two options provided by Azure for autoscaling?|Azure provides two options for autoscaling: scaling based on a metric and scaling to a specific instance count according to a schedule.
How does autoscaling work in relation to the App Service Plan?|Autoscaling is a feature of the App Service Plan used by the web app, where Azure starts new instances of the hardware defined by the App Service Plan.
Which metrics can be monitored for autoscaling a web app?|The metrics that can be monitored for autoscaling a web app include CPU Percentage, Memory Percentage, Disk Queue Length, Http Queue Length, Data In, and Data Out.
How does an autoscale rule analyze metrics?|An autoscale rule analyzes metrics by aggregating values retrieved for a metric over a time grain and performing a further aggregation over a user-specified duration.
What are the types of autoscale actions?|Autoscale actions can be scale-out (increasing the number of instances) or scale-in (reducing the instance count).
Why is a cool down period important in autoscale actions?|The cool down period in autoscale actions allows the system to stabilize between events, preventing immediate triggering of further autoscale actions.
How should autoscale rules be paired for scaling-in and scaling-out?|Autoscale rules should be defined in pairs, where one rule specifies scaling out when a metric exceeds an upper threshold and the other rule specifies scaling in when the same metric drops below a lower threshold.
Can multiple autoscale rules be combined in a single autoscale condition?|Yes, a single autoscale condition can contain multiple autoscale rules to handle different schedules and metrics, triggering autoscaling when any of the conditions apply.
How does autoscaling prevent creating more instances than the instance limit?|Autoscaling is prevented from creating more instances than the instance limit defined in the App Service Plan, ensuring controlled scaling operations.
What are the options for scaling based on metrics?|The options for scaling based on metrics include scaling based on the length of the disk queue or the number of HTTP requests awaiting processing.
Can autoscaling be scheduled?|Yes, autoscaling can be scheduled to occur at specific times of the day, on specific dates, or on particular days of the week.
What is the purpose of the default condition in an App Service Plan?|The default condition in an App Service Plan is always active and serves as the fallback condition used when none of the other conditions are applicable.
Can autoscaling be based on metrics for other Azure services?|Yes, autoscaling can be based on metrics for other Azure services, such as scaling the web app based on the number of items held in an Azure Service Bus Queue.
How is an autoscale action triggered based on metrics?|An autoscale action is triggered when a metric crosses a defined threshold, using operators like greater than, less than, equal to, and others.
Why is it important to define autoscale rules in pairs?|Defining autoscale rules in pairs allows for both scaling out and scaling in based on upper and lower thresholds of a metric, providing balanced scaling operations.
Can multiple autoscale rules be used in a single autoscale condition?|Yes, multiple autoscale rules can be created within a single autoscale condition to handle different scenarios and combinations of metrics, allowing for more complex autoscaling configurations.
What is the minimum cool down period for an autoscale action?|The minimum cool down period for an autoscale action is five minutes, allowing time for system stabilization between events.
What does an autoscale setting do?|An autoscale setting scales instances horizontally by increasing or decreasing the number of instances.
What is the recommended practice for setting the maximum and minimum instance values?|Ensure the maximum and minimum values are different and have an adequate margin between them.
What is the recommended practice for choosing the thresholds for scale-out and scale-in?|Choose different thresholds for scale-out and scale-in based on practical situations.
How does autoscale handle "flapping" situations?|Autoscale skips scaling in and reevaluates the condition during the next execution of the service's job.
Why does autoscale avoid scaling in during "flapping" situations?|To prevent a continuous cycle of scale-in and scale-out actions.
What happens on scale-out when multiple rules are configured in an autoscale profile?|Autoscale runs if any rule is met.
What happens on scale-in when multiple rules are configured in an autoscale profile?|Autoscale requires all rules to be met.
Why is the default instance count important in autoscale?|It scales the service to that count when metrics aren't available.
What should be considered when selecting the default instance count?|Select a default instance count that's safe for your workloads.
When does autoscale post to the Activity Log?|Autoscale posts to the Activity Log when it issues a scale operation, completes a scale action, or fails to take a scale action.
How can you receive notifications for successful scale actions?|You can configure email or webhook notifications via the notifications tab on the autoscale setting.
How can you monitor the health of the autoscale engine?|You can use an Activity Log alert to monitor the health of the autoscale engine.
